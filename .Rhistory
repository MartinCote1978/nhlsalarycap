"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
}
contract_years
}
insertMissingContractYears(2018,
"P.K. Subban",
"D",
"",
25,
5,
8,
72000000,
2022,
"montreal",
2014,
"$9,000,000",
9000000,
9000000,
4)
insertMissingContractYears <- function(max_season,
player,
pos,
x,
age,
exp,
contractlength,
contractamount,
expires,
team,
season,
amtperyear,
avgsalary,
amtperyear_int,
years_left) {
contract_years <- tbl_df(data.frame(player,
pos,
"",
age,
exp,
contractlength,
contractamount,
expires,
team,
(max_season + 1),
amtperyear,
avgsalary,
amtperyear_int,
years_left))
names(contract_years) <-  c("PLAYER",
"POS..x",
"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
contract_years
}
insertMissingContractYears(2018,
"P.K. Subban",
"D",
"",
25,
5,
8,
72000000,
2022,
"montreal",
2014,
"$9,000,000",
9000000,
9000000,
4)
insertMissingContractYears <- function(max_season,
player,
pos,
x,
age,
exp,
contractlength,
contractamount,
expires,
team,
season,
amtperyear,
avgsalary,
amtperyear_int,
years_left) {
contract_years <- tbl_df(data.frame(player,
pos,
"",
age,
exp,
contractlength,
contractamount,
expires,
team,
(max_season + 1),
amtperyear,
avgsalary,
amtperyear_int,
years_left))
names(contract_years) <-  c("PLAYER",
"POS..x",
"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
for(i in 2:years_left) {
tmp <- tbl_df(data.frame(player,
pos,
"",
age,
exp,
contractlength,
contractamount,
expires,
team,
(max_season + as.numeric(i)),
amtperyear,
avgsalary,
amtperyear_int,
years_left))
names(tmp) <-  c("PLAYER",
"POS..x",
"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
contract_years <- bind_rows(contract_years, tmp)
}
contract_years
}
insertMissingContractYears(2018,
"P.K. Subban",
"D",
"",
25,
5,
8,
72000000,
2022,
"montreal",
2014,
"$9,000,000",
9000000,
9000000,
4)
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(SEASON),
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
debug(insertMissingContractYears)
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(SEASON),
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(nhl_salaries_tidy$SEASON),
nhl_salaries_tidy$PLAYER,
nhl_salaries_tidy$POS..x,
nhl_salaries_tidy$X,
nhl_salaries_tidy$AGE,
nhl_salaries_tidy$EXP.,
nhl_salaries_tidy$CONTRACTLENGTH,
nhl_salaries_tidy$CONTRACTAMOUNT,
nhl_salaries_tidy$EXPIRES,
nhl_salaries_tidy$TEAM,
nhl_salaries_tidy$SEASON,
nhl_salaries_tidy$AMTPERYEAR,
nhl_salaries_tidy$AVGSALARY,
nhl_salaries_tidy$AMTPERYEAR_INT,
nhl_salaries_tidy$YEARS_LEFT))
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
#group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(SEASON),
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
?stopdebug
undebug(insertMissingContractYears)
library(dplyr)
library(tidyr)
library(lubridate)
## Constants
data_folder <- "data-"
prefix <- "nhlsalarycap-"
suffix_contracts <- "-contracts-"
suffix_peryear <- "-peryear-"
data_date <- "2015-02-23"
teams <- c("anaheim", "arizona", "boston", "buffalo", "calgary", "carolina", "chicago", "colorado",
"columbus", "dallas", "detroit", "edmonton", "florida", "losangeles", "minnesota", "montreal",
"nashville", "newjersey", "nyislanders", "nyrangers", "ottawa", "philadelphia", "pittsburgh",
"sanjose", "stlouis", "tampabay", "toronto", "vancouver", "washington", "winnipeg")
readTeamSrcData <- function(team_name) {
team_peryear <- tbl_df(read.csv(file=paste("./",
data_folder,
data_date,
"/",
prefix,
team_name,
suffix_peryear,
data_date,
".csv",
sep=""),
header=TRUE,
colClasses=c("character", # PLAYER
"character", # POS
"character", # 2014
"character", # 2015
"character", # 2016
"character", # 2017
"character", # 2018
"character"), # X
stringsAsFactors=FALSE)
)
team_contracts <- tbl_df(read.csv(file=paste("./",
data_folder,
data_date,
"/",
prefix,
team_name,
suffix_contracts,
data_date,
".csv",
sep=""),
header=TRUE,
colClasses=c("character", # PLAYER
"character", # POS
"integer", # AGE
"integer", # EXP.
"character", # CONTRACT TERMS
"character", # AVG. SALARY
"character"), # EXPIRES
stringsAsFactors=FALSE,
fileEncoding="latin1")
)
team_salaries <- team_peryear %>%
left_join(team_contracts, by="PLAYER") %>%
mutate(TEAM = team_name)
team_salaries
}
insertMissingContractYears <- function(max_season,
player,
pos,
x,
age,
exp,
contractlength,
contractamount,
expires,
team,
season,
amtperyear,
avgsalary,
amtperyear_int,
years_left) {
contract_years <- tbl_df(data.frame(player,
pos,
"",
age,
exp,
contractlength,
contractamount,
expires,
team,
(max_season + 1),
amtperyear,
avgsalary,
amtperyear_int,
years_left))
names(contract_years) <-  c("PLAYER",
"POS..x",
"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
for(i in 2:years_left) {
tmp <- tbl_df(data.frame(player,
pos,
"",
age,
exp,
contractlength,
contractamount,
expires,
team,
(max_season + as.numeric(i)),
amtperyear,
avgsalary,
amtperyear_int,
years_left))
names(tmp) <-  c("PLAYER",
"POS..x",
"X",
"AGE",
"EXP.",
"CONTRACTLENGTH",
"CONTRACTAMOUNT",
"EXPIRES",
"TEAM",
"SEASON",
"AMTPERYEAR",
"AVGSALARY",
"AMTPERYEAR_INT",
"YEARS_LEFT")
contract_years <- bind_rows(contract_years, tmp)
}
contract_years
}
nhl_salaries <- readTeamSrcData(teams[1])
for(i in 2:length(teams)) {
nhl_salaries <- nhl_salaries %>% bind_rows(readTeamSrcData(teams[i]))
}
## Pre-Conditions steps:
### 1. To separate contract.terms, no NA is allowed.  For those, insert value "0 yr$0".
nhl_salaries[is.na(nhl_salaries$CONTRACT.TERMS), ]$CONTRACT.TERMS <- "0 yr$0"
### 2. Replace ' yr$' with '__' to use the dplyr:separate functions later
nhl_salaries$CONTRACT.TERMS <- sub(" yr\\$", "__", nhl_salaries$CONTRACT.TERMS)
## Clean/Tidy up
nhl_salaries_tidy <- nhl_salaries %>%
### 1. Separate contract terms
separate(col=CONTRACT.TERMS, into=c("CONTRACTLENGTH", "CONTRACTAMOUNT"), sep="__") %>%
mutate(CONTRACTLENGTH = as.numeric(CONTRACTLENGTH)) %>%
mutate(CONTRACTAMOUNT = extract_numeric(CONTRACTAMOUNT)) %>%
### 2. switch the expires to numeric type
mutate(EXPIRES = as.numeric(EXPIRES)) %>%
### 3. Switch years (2014, 2015, 2016, 2017, 2018) variable as one variable ('problem 1')
gather(SEASON, AMTPERYEAR, X2014:X2018, na.rm=FALSE) %>%
mutate(SEASON = extract_numeric(SEASON)) %>%
### 4. switch all dollars amount to actual numbers type
mutate(AVGSALARY = extract_numeric(AVG..SALARY)) %>%
### 5. Remove the duplicate column 'POS..y' and no longer necessary AVG..SALARY (replaced by step 4)
select(-c(POS..y, AVG..SALARY))
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
#group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(SEASON), # ERROR unable to find the data by 'SEASON', etc.
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
insertMissingContractYears(2018,
"P.K. Subban",
"D",
"",
25,
5,
8,
72000000,
2022,
"montreal",
2014,
"$9,000,000",
9000000,
9000000,
4)
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
#group_by(PLAYER, TEAM) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON))
View(nhl_salaries_tidy_tmp)
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON)) %>%
bind_rows(insertMissingContractYears(max(SEASON), # ERROR unable to find the data by 'SEASON', etc.
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
nhl_salaries_tidy_tmp <- nhl_salaries_tidy %>%
mutate(AMTPERYEAR_INT = extract_numeric(AMTPERYEAR)) %>%
filter(!is.na(AMTPERYEAR_INT)) %>%
mutate(YEARS_LEFT = EXPIRES - max(SEASON))
nhl_salaries_tidy_tmp2 <- nhl_salaries_tidy_tmp %>%
bind_rows(insertMissingContractYears(max(SEASON), # ERROR unable to find the data by 'SEASON', etc.
PLAYER,
POS..x,
X,
AGE,
EXP.,
CONTRACTLENGTH,
CONTRACTAMOUNT,
EXPIRES,
TEAM,
SEASON,
AMTPERYEAR,
AVGSALARY,
AMTPERYEAR_INT,
YEARS_LEFT))
nhl_2015_teamsalaries <- nhl_salaries_tidy %>%
group_by(TEAM, SEASON) %>%
summarise(TOTAL_SEASON = sum(AVGSALARY, na.rm=TRUE)) %>%
filter(SEASON == 2015) %>%
ungroup() %>%
arrange(desc(TOTAL_SEASON))
View(nhl_2015_teamsalaries)
