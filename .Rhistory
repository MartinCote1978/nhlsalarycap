?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtittle")
plot(cars, sub="My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
data(cars)
view(cars)
View(cars)
tapply(mtcars$hp, mtcars$cyl, mean)
library(datasets)
data(mtcars)
avg_diff <- tapply(mtcars$hp, mtcars$cyl, mean)
avg_diff["8"] - avg_diff["4"]
avg_diff["8"]
avg_diff["4"]
tapply(mtcars$mpg, mtcars$cyl, mean)
data(iris)
head(iris)
by(iris[,1], Species, colMeans)
v <- iris$Species == "virginica"
lapply(iris[v, ], mean)
colMeans(iris) # error, iris is not a matrix
class(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean) # incorrect
tapply(mtcars$mpg, mtcars$cyl, mean)
avg_diff <- tapply(mtcars$hp, mtcars$cyl, mean)
avg_diff["8"] - avg_diff["4"]
ls()
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packaveVersion("dplyr")
packageVersion("dplyr")
install.packages("dplyr")
install.packages("dplyr")
packageVersion("dplyr")
swirl()
library(swirl)
swirl()
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version <= "3.0.2", country="IN")
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_Class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into=c("sex", "class"))
submit()
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
udpate(this_moment, hours=8, minutes=34, seconds=55)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- udpate(depart, hours=17, minutes=34, seconds=0)
depart <- update(depart, hours=17, minutes=34, seconds=0)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
GITHUB_CONSUMER_SECRET <- 0661fb5b50011ee34756eaf151c3f5d52a7112c9
GITHUB_CONSUMER_SECRET <- "0661fb5b50011ee34756eaf151c3f5d52a7112c9"
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
GITHUB_CONSUMER_SECRET <- "0661fb5b50011ee34756eaf151c3f5d52a7112c9"
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
GITHUB_CONSUMER_SECRET <- "0661fb5b50011ee34756eaf151c3f5d52a7112c9"
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
gtoken <- config(token = github_token)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
library(httr)
library(httpuv)
oauth_endpoints("github")
GITHUB_CONSUMER_SECRET <- "0661fb5b50011ee34756eaf151c3f5d52a7112c9"
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
req
client_id = '9a0f344b7f5c3505a67d'
client_secret = '0661fb5b50011ee34756eaf151c3f5d52a7112c9'
authorization_base_url = 'https://github.com/login/oauth/authorize'
token_url = 'https://github.com/login/oauth/access_token'
from requests_oauthlib import OAuth2Session
github = OAuth2Session(client_id)
authorization_url, state = github.authorization_url(authorization_base_url)
library(rjson)
oauth_endpoints("github")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
req<-GET("https://api.github.com/users/jtleek/repos",config(token=github_token))
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
json2[4,"created_at"]
json2
library(httr)
library(httpuv)
library(rjson)
oauth_endpoints("github")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
req<-GET("https://api.github.com/users/jtleek/repos",config(token=github_token))
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
json2[4,"created_at"]
json2
library(httr)
library(httpuv)
library(rjson)
oauth_endpoints("github")
myapp <- oauth_app("github", "9a0f344b7f5c3505a67d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
req<-GET("https://api.github.com/users/jtleek/repos",config(token=github_token))
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
json2[4,"created_at"]
json2
library(dplyr)
attach(ToothGrowth)
ToothGrowth
ToothGrowth %>%
group_by(supp) %>%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp)
ToothGrowth %>%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp)
ToothGrowth %>%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp) %>%
summarize(meanLen = mean(len))
ToothGrowth %.%
group_by(supp, dose) %.%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp, dose) %>%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp, dose)
ToothGrowth %>%
mutate(dose-factor = as.factor(ToothGrowth$dose)) %>%
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(ToothGrowth$dose)) %>%
ToothGrowth
library(dplyr)
attach(ToothGrowth)
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(ToothGrowth$dose)) %>%
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
ToothGrowth
ToothGrowth %>%
group_by(supp, dose) %>%
summarize(meanLen = mean(len))
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(dose))
ToothGrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
levels(dose.factor) <- c("0.5mg", "1mg", "2mg")
ToothGrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
mutate(levels(dose.factor) = c("0.5mg", "1mg", "2mg"))
ToothGrowth %>%
mutate(dose.factor = as.factor(dose, levels=c(0.5, 1, 2), labels=c("0.5mg", "1mg", "2mg")))
ToothGrowth
ToothGrowth %>%
mutate(dose.factor = as.factor(dose, labels=c("0.5mg", "1mg", "2mg")))
ToothGrowth %>%
mutate(dose.factor = as.factor(dose))
ToothGrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
print()
test <- ToothGrowth %>%
mutate(dose.factor = as.factor(dose))
test
class(est)
class(test)
class(ToothGrowth)
test2 <- tbl_df(ToothGrowth)
class(test2)
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
print()
toothgrowth <- tbl_df(ToothGrowth)
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
mutate(levels(dose.factor) = c("0.5mg", "1mg", "2mg")) %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
mutate(levels(dose.factor) = c("0.5mg", "1mg", "2mg")) %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
levels(dose.factor) <- c("0.5mg", "1mg", "2mg")) %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
levels(dose.factor) <- c("0.5mg", "1mg", "2mg") %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
levels(dose.factor) <- c("0.5mg", "1mg", "2mg") %>%
print()
library(dplyr)
attach(ToothGrowth)
toothgrowth <- tbl_df(ToothGrowth) # TODO: Why wasn't it needed for the previous calls??
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
levels(dose.factor) <- c("0.5mg", "1mg", "2mg") %>%
print()
toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
mutate(levels(dose.factor) = c("0.5mg", "1mg", "2mg")) %>%
print()
library(dplyr)
attach(ToothGrowth)
ToothGrowth
toothgrowth <- tbl_df(ToothGrowth) # TODO: Why wasn't it needed for the previous calls??
toothgrowth %>%
mutate(dose.factor = as.factor(dose))
toothgrowth <- tbl_df(ToothGrowth) # TODO: Why wasn't it needed for the previous calls??
toothgrowth %>%
mutate(dose.factor = as.factor(dose))
levels(dose.factor) <- c("0.5mg", "1mg", "2mg")
toothgrowth <- toothgrowth %>%
mutate(dose.factor = as.factor(dose))
levels(dose.factor) <- c("0.5mg", "1mg", "2mg")
toothgrowth <- toothgrowth %>%
mutate(dose.factor = as.factor(dose)) %>%
print()
levels(toothgrowth$dose.factor) <- c("0.5mg", "1mg", "2mg")
toothgrowth
View(toothgrowth)
library(dplyr)
library(ggplot2)
library(Lahman)
big.df = merge(Batting, Master, by="playerID")
big.df <- tbl_df(big.df)
big.df %>%
select(playerID, yearID, birthYear, HR) %>%
mutate(age = yearID - birthYear) %>%
filter(!is.na(HR)) %>%
filter(!is.na(age)) %>%
group_by(playerID) %>%
mutate(season.count = yearID - min(yearID) + 1) %>%
mutate(season.tot = max(season.count)) %>%
filter(season.tot > 10) %>%
summarise(top.HR.age = age[HR == max(HR)][1]) %>%
ggplot(., aes(x = factor(top.HR.age))) + geom_histogram()
library(dplyr)
attach(ToothGrowth)
ToothGrowth
ToothGrowth %>%
group_by(supp) %>%
summarize(meanLen = mean(len))
# Reorder the rows by 'supp'
ToothGrowth %>%
group_by(supp)
ToothGrowth %>%
summarize(meanLen = mean(len))
ToothGrowth %>%
group_by(supp, dose) %>%
summarize(meanLen = mean(len))
toothgrowth <- tbl_df(ToothGrowth) # TODO: Why wasn't it needed for the previous calls??
toothgrowth <- toothgrowth %>%
transmute(len, supp, dose = as.factor(dose)) %>% # 'len' and 'supp' are added to keep them as columns
print()
toothgrowth <- toothgrowth %>%
transmute(len, supp, dose = as.factor(dose)) %>% # 'len' and 'supp' are added to keep them as columns
print()
levels(toothgrowth$dose) <- c("0.5mg", "1mg", "2mg")
toothgrowth
date()
Sys.Date()
weekdays(Sys.Date())
?Sys.timezone
intall.packages(RFacebook)
intall.packages("RFacebook")
install.packages("RFacebook")
install.packages("Rfacebook")
install.packages("RGoogleMaps")
install.packages("RgoogleMaps")
setwd("~/github-repo/nhlsalarycap")
library(dplyr)
library(tidyr)
library(lubridate)
nhl_salaries_tidy <- tbl_df(read.csv(file="nhl_salaries_tidy.csv", header=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
group_by(TEAM, POS, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
View(nhl_totsalarycommittedbyposition)
nhl_totsalarycommittedbyposition %>%
write.csv(file="nhl_totsalarycommittedbyposition.csv", row.names=FALSE)
library(dplyr)
library(tidyr)
library(lubridate)
nhl_salaries_tidy <- tbl_df(read.csv(file="nhl_salaries_tidy.csv", header=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS in c("RW", "LW", "C", "D"), ifelse(POS in c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS in c("RW", "LW", "C", "D"), ifelse(POS in c("RW", "LW", "C"), "F", "D"), "G" ))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" ))
View(nhl_totsalarycommittedbyposition)
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition %>%
write.csv(file="nhl_totsalarycommittedbyposition.csv", row.names=FALSE)
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE), PLAYERCOUNT = count(PLAYER))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
mutate(PLAYERCOUNT = count(PLAYER))
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
mutate(PLAYERCOUNT = count(PLAYER)) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
#mutate(PLAYERCOUNT = count(PLAYER)) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
mutate(PLAYERCOUNT = count() ) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
mutate(PLAYERCOUNT = count(POS_GROUP) ) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
mutate(PLAYERCOUNT = count(PLAYER) ) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
nhl_totsalarycommittedbyposition <- nhl_salaries_tidy %>%
mutate(POS_GROUP = ifelse(POS %in% c("RW", "LW", "C", "D"), ifelse(POS %in% c("RW", "LW", "C"), "F", "D"), "G" )) %>%
mutate(PLAYERCOUNT = count(PLAYER) ) %>%
group_by(TEAM, POS_GROUP, SEASON) %>%
summarise(TOTALSALARYCOMMITTEDBYPOS = sum(AMTPERYEAR_INT, na.rm=TRUE))
